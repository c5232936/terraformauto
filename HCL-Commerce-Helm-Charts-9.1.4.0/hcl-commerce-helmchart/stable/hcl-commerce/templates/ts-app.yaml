######################################################
# Licensed Materials - Property of HCL Technologies
#  HCL Commerce
#  (C) Copyright HCL Technologies Limited 1996, 2020
######################################################
{{- $envTypeList := splitList "," (nospace .Values.common.environmentType) }}
{{- range $envType := $envTypeList }}
{{- if ne $envType "share" }}
{{- $_ := set $ "envType" $envType }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: HCL-Commerce
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "-" }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
  name: {{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}{{$.Values.tsApp.name}}
  namespace: {{ $.Release.Namespace }}
spec:
  selector: 
    matchLabels:
      {{- if $.Values.backwardCompatibility.selector.app }}
      app: {{ $.Values.backwardCompatibility.selector.app }}
      {{- end }}
      {{- if $.Values.backwardCompatibility.selector.chart }}
      chart: {{ $.Values.backwardCompatibility.selector.chart }}
      {{- else }}
      chart: {{ $.Chart.Name }}
      {{- end }}
      release: {{ $.Release.Name }}
      heritage: {{ $.Release.Service }}
      component: {{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}{{$.Values.tsApp.name}}
      group: {{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}
      {{- range $key, $value := $.Values.backwardCompatibility.selector.extraSelector }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
  replicas: {{ $.Values.tsApp.replica }}
  template:
    metadata:
      annotations:
        productName: "HCL Commerce"
        productVersion: {{ $.Values.common.productVersion | quote }}
        deployTime: {{ now }}
      labels:
        {{- if $.Values.backwardCompatibility.selector.app }}
        app: {{ $.Values.backwardCompatibility.selector.app }}
        {{- else }}
        app: HCL-Commerce
        {{- end }}
        {{- if $.Values.backwardCompatibility.selector.Chart }}
        chart: {{ $.Values.backwardCompatibility.selector.Chart }}
        {{- else }}
        chart: {{ $.Chart.Name }}
        {{- end }}
        release: {{ $.Release.Name }}
        heritage: {{ $.Release.Service }}
        component: {{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}{{$.Values.tsApp.name}}
        group: {{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}
        {{- range $key, $value := $.Values.backwardCompatibility.selector.extraSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if $.Values.tsApp.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.tsApp.nodeSelector | indent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
           {{- if $.Values.tsApp.nodeLabel }}
           requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: wc-node-select-flag
                  operator: In
                  values: 
                  - {{ $.Values.tsApp.nodeLabel }}
           {{- else }}
           requiredDuringSchedulingIgnoredDuringExecution:
           {{- include "nodeAffinityRequiredDuringScheduling" $ | indent 8 }}
           {{- end }}   
           preferredDuringSchedulingIgnoredDuringExecution:
           {{- include "nodeAffinityPreferredDuringScheduling" $ | indent 8 }}
      {{- include "tsapp-podAntiAffinity" $ | indent 6 }} 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccountName: {{ $.Values.common.serviceAccountName | default (printf "%s-commerce" $.Release.Name) }}
      {{- if or $.Values.tsDb.enabled $.Values.vaultconsul.enabled }}
      initContainers:
      {{- if or $.Values.tsDb.enabled }}
      - name: transaction-dependence-check
        image: "{{ include "image.repo" $ }}{{ $.Values.supportC.image }}:{{ $.Values.supportC.tag }}"
        {{- if $.Values.common.imagePullPolicy }}
        imagePullPolicy: {{ $.Values.common.imagePullPolicy }}
        {{- end }}
        args: ['depcheck', '-component','transaction','-tenant',{{ $.Values.common.tenant }},'-env',{{ $.Values.common.environmentName}},'-envtype',{{ $envType }},'-namespace',{{ $.Release.Namespace }},'-interval_time','20','-expect_during_time','600','-timeout','5','-spiuser_pwd_encrypte',{{ $.Values.common.spiUserPwdBase64 }}]
      {{- end }}
      {{- if $.Values.vaultconsul.enabled }}
      - name: vault-dependence-check
        image: "{{ include "image.repo" $ }}{{ $.Values.supportC.image }}:{{ $.Values.supportC.tag }}"
        {{- if $.Values.common.imagePullPolicy }}
        imagePullPolicy: {{ $.Values.common.imagePullPolicy }}
        {{- end }}
        args: ['depcheck', '-component','vault','-namespace',{{ $.Release.Namespace }},'-interval_time','10','-expect_during_time','120','-timeout','5']
      {{- end }}
      {{- end }}
      volumes:
        - name: logs-sharing
          emptyDir: {}
        - name: cores-sharing
        {{- if get $.Values.tsApp.coresSharingPersistentVolumeClaim $envType}}
          persistentVolumeClaim:
            claimName: {{ get $.Values.tsApp.coresSharingPersistentVolumeClaim $envType }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if $.Values.common.bindingConfigMap }}
        - name: config-volume
          configMap:
            name: {{ $.Values.common.bindingConfigMap }} 
      {{- end }}
      {{- if $.Values.hclCache.configMap }}
        - name: hcl-cache-config
          configMap:
            name: {{ include "hcl.cache.configmap.name" $ | quote }}
      {{- end }}
      {{- if and $.Values.fileBeat.enabled $.Values.tsApp.fileBeatConfigMap }}
        - name: filebeat-config-ts-app
          configMap:
            name: {{ $.Values.tsApp.fileBeatConfigMap }}
      {{- end }}
      {{- if include "image.pull.secret" $ }}
      imagePullSecrets:
        - name: {{ include "image.pull.secret" $ }}
      {{- end }}
      containers:
      - name: ts-app
        image: "{{ include "image.repo" $ }}{{ $.Values.tsApp.image }}:{{ $.Values.tsApp.tag }}"
        {{- if $.Values.common.imagePullPolicy }}
        imagePullPolicy: {{ $.Values.common.imagePullPolicy }}
        {{- end }}
        resources:
{{ toYaml $.Values.tsApp.resources | indent 12 }}
        env:
        - name: "LICENSE"
          value: {{ $.Values.license | quote }}
        {{- if include "license.url" $ }}
        - name: "FLEXNET_URL"
          value: {{ include "license.url" $ | quote }}
        {{- end }}
        {{- if include "license.id" $ }}
        - name: "FLEXNET_DEVICE_ID"
          value: {{ include "license.id" $ | quote }}
        {{- end }}
        {{- if and (include "license.user" $) (ne (include "license.user" $) "admin") }}
        - name: "FLEXNET_USER"
          value: {{ $.Values.hclFlexnetUserName | quote }}
        {{- end }}
        {{- if include "license.user.password" $ }}
        - name: "FLEXNET_PASSWORD"
          value: {{ include "license.user.password" $ | quote }}
        {{- end }}
        {{- if $.Values.common.commerceVersion }}
        {{- if (or (eq $.Values.common.commerceVersion "9.0.0.1") (eq $.Values.common.commerceVersion "9.0.0.0")) }}
          {{- if $.Values.common.overridePreconfig }}
        - name: "OVERRIDE_PRECONFIG"
          value: {{ $.Values.common.overridePreconfig | quote }}
          {{- end }}
        {{- end}}
        {{- else }}
        - name: "CONFIGURE_MODE"
          value: {{ $.Values.common.configureMode | quote }}
        {{- end }}
        - name: "ENVIRONMENT"
          value: {{ $.Values.common.environmentName | quote }}
        - name: "TENANT"
          value: {{$.Values.common.tenant | quote }}
        - name: "ENVTYPE"
          value: {{ $envType | quote }}
        - name: "DOMAIN_NAME"
          value: "{{ $.Release.Namespace }}.svc.cluster.local"
        {{- if $.Values.global.sofySolutionContext }}
        - name: "EXTERNAL_DOMAIN_NAME"
        {{- if $.Values.global.domain }}
          value: {{ $.Values.global.domain }}
        {{- else }}
          valueFrom:
              configMapKeyRef:
                name: {{ $.Release.Name }}-domain
                key: HOST
        {{- end }}
        - name: "STOREWEB_HOST"
          {{- if eq $envType "auth" }}
          value: "commerce-preview.$(EXTERNAL_DOMAIN_NAME)"
          {{- else }}
          value: "commerce-live.$(EXTERNAL_DOMAIN_NAME)"
          {{- end }}
        - name: "REACT_STORE_HOST"
          {{- if eq $envType "auth" }}
          value: "commerce-preview.$(EXTERNAL_DOMAIN_NAME)"
          {{- else }}
          value: "commerce-live.$(EXTERNAL_DOMAIN_NAME)"
          {{- end }}
        - name: "TOOLING_BASE_URL"
          {{- if eq $envType "auth" }}
          value: "https://commerce-preview.$(EXTERNAL_DOMAIN_NAME)/tooling"
          {{- else }}
          value: "https://commerce-live.$(EXTERNAL_DOMAIN_NAME)/tooling"
          {{- end }}
        {{- else }}
        - name: "EXTERNAL_DOMAIN_NAME"
          value: "{{ $.Values.common.externalDomain }}"
        - name: "STOREWEB_HOST"
          value: "store.{{ $.Values.common.tenant }}{{ $.Values.common.environmentName}}{{ $envType }}{{ $.Values.common.externalDomain }}"
        - name: "TOOLING_BASE_URL"
          value: "https://www.{{ $.Values.common.tenant }}{{ $.Values.common.environmentName }}{{ $envType }}{{ $.Values.common.externalDomain }}/tooling"
        {{- end }}
        - name: "DBTYPE"
          value: {{ $.Values.common.dbType | quote }}
        - name: "VAULT_CA"
          value: {{ $.Values.vaultCA.enabled | quote }}
        {{- if $.Values.tsApp.merchantKey }}
        - name: "MERCHANTKEY_ENCRYPT"
          value: {{ $.Values.tsApp.merchantKey | quote }}
        {{- end }}
        - name: "SPIUSER_NAME"
          value: {{ $.Values.common.spiUserName | quote}}
        - name: "SPIUSER_PWD"
          value: {{ $.Values.common.spiUserPwdAes | quote}}
        {{- if eq $.Values.common.searchEngine "elastic" }}
        - name: "ELASTICSEARCH"
          value: "true"
        {{- end }}
        {{- if $.Values.metrics.enabled }}
        - name: "EXPOSE_METRICS"
          value: "true"
        {{- end }}
        {{- if (or (eq $.Values.common.configureMode "Vault") $.Values.vaultCA.enabled) }}
        - name: "VAULT_URL"
          value: {{ $.Values.common.vaultUrl | quote }}
        {{- if $.Values.common.vaultTokenSecret }}
        - name: "VAULT_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.common.vaultTokenSecret }}
              key: VAULT_TOKEN
        {{- end }}
        {{- end }}
{{- if get $.Values.tsApp.envParameters $envType }}
     {{- range $key, $value := get $.Values.tsApp.envParameters $envType }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
     {{- end }} 
{{- end }} 
        ports: 
        - containerPort: 5080
          name: db5080
          protocol: TCP
        - containerPort: 5443
          name: db5443
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /wcs/resources/health/ping
            port: 5443
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /wcs/resources/health/ping
            port: 5443
            scheme: HTTPS
          initialDelaySeconds: 600
          timeoutSeconds: 300
        securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
            privileged: false
            capabilities:
              drop:
              - all
              add:
              - CHOWN
              - DAC_OVERRIDE
              - FOWNER
              - FSETID
              - KILL
              - SETGID
              - SETUID
              - SETPCAP
              - NET_BIND_SERVICE
              - NET_RAW
              - SYS_CHROOT
              - MKNOD
              - AUDIT_WRITE
              - SETFCAP
        volumeMounts:
          - name: logs-sharing
            mountPath: /opt/WebSphere/AppServer/profiles/default/logs/container
          - name: cores-sharing
            mountPath: /opt/WebSphere/AppServer/profiles/default/cores/container
        {{- if $.Values.common.bindingConfigMap }}
          - name: config-volume
            mountPath: /SETUP/ext-config/config.properties
            subPath: config.properties
            readOnly: false   
        {{- end }}
        {{- if $.Values.hclCache.configMap }}
          - name: hcl-cache-config
            mountPath: /SETUP/hcl-cache/cache_cfg-ext.yaml
            subPath: cache_cfg-ext.yaml
          - name: hcl-cache-config
            mountPath: /SETUP/hcl-cache/redis_cfg.yaml
            subPath: redis_cfg.yaml
        {{- end }}
{{- if $.Values.fileBeat.enabled }}
      - name: filebeat
        image: "{{ include "image.repo" $ }}{{ $.Values.fileBeat.image }}:{{ $.Values.fileBeat.tag }}"
        {{- if $.Values.common.imagePullPolicy }}
        imagePullPolicy: {{ $.Values.common.imagePullPolicy }}
        {{- end }}
        resources:
{{ toYaml $.Values.fileBeat.resources | indent 12 }}
        args: ["-indexName", "{{ $.Values.common.tenant }}-{{ $.Values.common.environmentName}}-{{ $envType }}", "-targetELK", "{{ $.Values.fileBeat.elkServer }}", "-componentType", "ts-app"]
        securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
            privileged: false
            capabilities:
              drop:
              - all
              add:
              - CHOWN
              - DAC_OVERRIDE
              - FOWNER
              - FSETID
              - KILL
              - SETGID
              - SETUID
              - SETPCAP
              - NET_BIND_SERVICE
              - NET_RAW
              - SYS_CHROOT
              - MKNOD
              - AUDIT_WRITE
              - SETFCAP
        volumeMounts:
        - name: logs-sharing
          mountPath: /log
        {{- if $.Values.tsApp.fileBeatConfigMap }}
        - name: filebeat-config-ts-app
          mountPath: /etc/filebeat
        {{- end }}
{{- end }}
---
{{- end }}
{{- end }}
